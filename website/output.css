@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

@import url("https://raw.githubusercontent.com/blaisck/sfwin/master/SFPro/TrueType/SFProDisplay-Heavy.ttf");

@import url("https://raw.githubusercontent.com/blaisck/sfwin/master/SFPro/TrueType/SFProText-Light.ttf");

*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
  --motion-origin-scale-x: 100%;
  --motion-origin-scale-y: 100%;
  --motion-origin-translate-x: 0%;
  --motion-origin-translate-y: 0%;
  --motion-origin-rotate: 0deg;
  --motion-origin-blur: 0px;
  --motion-origin-grayscale: 0%;
  --motion-origin-opacity: 100%;
  --motion-origin-background-color: ;
  --motion-origin-text-color: ;
  --motion-end-scale-x: 100%;
  --motion-end-scale-y: 100%;
  --motion-end-translate-x: 0%;
  --motion-end-translate-y: 0%;
  --motion-end-rotate: 0deg;
  --motion-end-blur: 0px;
  --motion-end-grayscale: 0%;
  --motion-end-opacity: 100%;
  --motion-end-background-color: ;
  --motion-end-text-color: ;
  --motion-loop-scale-x: 100%;
  --motion-loop-scale-y: 100%;
  --motion-loop-translate-x: 0%;
  --motion-loop-translate-y: 0%;
  --motion-loop-rotate: 0deg;
  --motion-loop-blur: 0px;
  --motion-loop-grayscale: 0%;
  --motion-loop-opacity: 100%;
  --motion-loop-background-color: ;
  --motion-loop-text-color: ;
  --motion-duration: 750ms;
  --motion-timing: var(--motion-default-timing);
  --motion-perceptual-duration-multiplier: 1;
  --motion-delay: 0ms;
  --motion-loop-count: infinite;
  --motion-scale-duration: var(--motion-duration);
  --motion-scale-timing: var(--motion-timing);
  --motion-scale-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-scale-delay: var(--motion-delay);
  --motion-scale-loop-count: var(--motion-loop-count);
  --motion-translate-duration: var(--motion-duration);
  --motion-translate-timing: var(--motion-timing);
  --motion-translate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-translate-delay: var(--motion-delay);
  --motion-translate-loop-count: var(--motion-loop-count);
  --motion-rotate-duration: var(--motion-duration);
  --motion-rotate-timing: var(--motion-timing);
  --motion-rotate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-rotate-delay: var(--motion-delay);
  --motion-rotate-loop-count: var(--motion-loop-count);
  --motion-filter-duration: var(--motion-duration);
  --motion-filter-timing: var(--motion-timing);
  --motion-filter-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-filter-delay: var(--motion-delay);
  --motion-filter-loop-count: var(--motion-loop-count);
  --motion-opacity-duration: var(--motion-duration);
  --motion-opacity-timing: var(--motion-timing);
  --motion-opacity-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-opacity-delay: var(--motion-delay);
  --motion-opacity-loop-count: var(--motion-loop-count);
  --motion-background-color-duration: var(--motion-duration);
  --motion-background-color-timing: var(--motion-timing);
  --motion-background-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-background-color-delay: var(--motion-delay);
  --motion-background-color-loop-count: var(--motion-loop-count);
  --motion-text-color-duration: var(--motion-duration);
  --motion-text-color-timing: var(--motion-timing);
  --motion-text-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-text-color-delay: var(--motion-delay);
  --motion-text-color-loop-count: var(--motion-loop-count);
  --motion-scale-in-animation: none;
  --motion-translate-in-animation: none;
  --motion-rotate-in-animation: none;
  --motion-filter-in-animation: none;
  --motion-opacity-in-animation: none;
  --motion-background-color-in-animation: none;
  --motion-text-color-in-animation: none;
  --motion-scale-out-animation: none;
  --motion-translate-out-animation: none;
  --motion-rotate-out-animation: none;
  --motion-filter-out-animation: none;
  --motion-opacity-out-animation: none;
  --motion-background-color-out-animation: none;
  --motion-text-color-out-animation: none;
  --motion-scale-loop-animation: none;
  --motion-translate-loop-animation: none;
  --motion-rotate-loop-animation: none;
  --motion-filter-loop-animation: none;
  --motion-opacity-loop-animation: none;
  --motion-background-color-loop-animation: none;
  --motion-text-color-loop-animation: none;
  --motion-all-enter-animations: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation);
  --motion-all-exit-animations: var(--motion-scale-out-animation), var(--motion-translate-out-animation), var(--motion-rotate-out-animation), var(--motion-filter-out-animation), var(--motion-opacity-out-animation), var(--motion-background-color-out-animation), var(--motion-text-color-out-animation);
  --motion-all-loop-animations: var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
  --motion-all-loop-and-enter-animations: var(--motion-all-loop-animations), var(--motion-all-enter-animations);
}

::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
  --motion-origin-scale-x: 100%;
  --motion-origin-scale-y: 100%;
  --motion-origin-translate-x: 0%;
  --motion-origin-translate-y: 0%;
  --motion-origin-rotate: 0deg;
  --motion-origin-blur: 0px;
  --motion-origin-grayscale: 0%;
  --motion-origin-opacity: 100%;
  --motion-origin-background-color: ;
  --motion-origin-text-color: ;
  --motion-end-scale-x: 100%;
  --motion-end-scale-y: 100%;
  --motion-end-translate-x: 0%;
  --motion-end-translate-y: 0%;
  --motion-end-rotate: 0deg;
  --motion-end-blur: 0px;
  --motion-end-grayscale: 0%;
  --motion-end-opacity: 100%;
  --motion-end-background-color: ;
  --motion-end-text-color: ;
  --motion-loop-scale-x: 100%;
  --motion-loop-scale-y: 100%;
  --motion-loop-translate-x: 0%;
  --motion-loop-translate-y: 0%;
  --motion-loop-rotate: 0deg;
  --motion-loop-blur: 0px;
  --motion-loop-grayscale: 0%;
  --motion-loop-opacity: 100%;
  --motion-loop-background-color: ;
  --motion-loop-text-color: ;
  --motion-duration: 750ms;
  --motion-timing: var(--motion-default-timing);
  --motion-perceptual-duration-multiplier: 1;
  --motion-delay: 0ms;
  --motion-loop-count: infinite;
  --motion-scale-duration: var(--motion-duration);
  --motion-scale-timing: var(--motion-timing);
  --motion-scale-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-scale-delay: var(--motion-delay);
  --motion-scale-loop-count: var(--motion-loop-count);
  --motion-translate-duration: var(--motion-duration);
  --motion-translate-timing: var(--motion-timing);
  --motion-translate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-translate-delay: var(--motion-delay);
  --motion-translate-loop-count: var(--motion-loop-count);
  --motion-rotate-duration: var(--motion-duration);
  --motion-rotate-timing: var(--motion-timing);
  --motion-rotate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-rotate-delay: var(--motion-delay);
  --motion-rotate-loop-count: var(--motion-loop-count);
  --motion-filter-duration: var(--motion-duration);
  --motion-filter-timing: var(--motion-timing);
  --motion-filter-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-filter-delay: var(--motion-delay);
  --motion-filter-loop-count: var(--motion-loop-count);
  --motion-opacity-duration: var(--motion-duration);
  --motion-opacity-timing: var(--motion-timing);
  --motion-opacity-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-opacity-delay: var(--motion-delay);
  --motion-opacity-loop-count: var(--motion-loop-count);
  --motion-background-color-duration: var(--motion-duration);
  --motion-background-color-timing: var(--motion-timing);
  --motion-background-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-background-color-delay: var(--motion-delay);
  --motion-background-color-loop-count: var(--motion-loop-count);
  --motion-text-color-duration: var(--motion-duration);
  --motion-text-color-timing: var(--motion-timing);
  --motion-text-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-text-color-delay: var(--motion-delay);
  --motion-text-color-loop-count: var(--motion-loop-count);
  --motion-scale-in-animation: none;
  --motion-translate-in-animation: none;
  --motion-rotate-in-animation: none;
  --motion-filter-in-animation: none;
  --motion-opacity-in-animation: none;
  --motion-background-color-in-animation: none;
  --motion-text-color-in-animation: none;
  --motion-scale-out-animation: none;
  --motion-translate-out-animation: none;
  --motion-rotate-out-animation: none;
  --motion-filter-out-animation: none;
  --motion-opacity-out-animation: none;
  --motion-background-color-out-animation: none;
  --motion-text-color-out-animation: none;
  --motion-scale-loop-animation: none;
  --motion-translate-loop-animation: none;
  --motion-rotate-loop-animation: none;
  --motion-filter-loop-animation: none;
  --motion-opacity-loop-animation: none;
  --motion-background-color-loop-animation: none;
  --motion-text-color-loop-animation: none;
  --motion-all-enter-animations: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation);
  --motion-all-exit-animations: var(--motion-scale-out-animation), var(--motion-translate-out-animation), var(--motion-rotate-out-animation), var(--motion-filter-out-animation), var(--motion-opacity-out-animation), var(--motion-background-color-out-animation), var(--motion-text-color-out-animation);
  --motion-all-loop-animations: var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
  --motion-all-loop-and-enter-animations: var(--motion-all-loop-animations), var(--motion-all-enter-animations);
}

/*
! tailwindcss v3.4.14 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:root{
  --motion-default-timing: cubic-bezier(.165, .84, .44, 1);
  --motion-bounce: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765,1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785,0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953,0.973, 1, 0.988, 0.984, 0.988, 1);
  --motion-spring-smooth: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
  --motion-spring-snappy: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
  --motion-spring-bouncy: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
  --motion-spring-bouncier: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
  --motion-spring-bounciest: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
}

.container{
  width: 100%;
}

@media (min-width: 640px){
  .container{
    max-width: 640px;
  }
}

@media (min-width: 768px){
  .container{
    max-width: 768px;
  }
}

@media (min-width: 1024px){
  .container{
    max-width: 1024px;
  }
}

@media (min-width: 1280px){
  .container{
    max-width: 1280px;
  }
}

@media (min-width: 1536px){
  .container{
    max-width: 1536px;
  }
}

.motion-preset-blur-down{
  --motion-origin-blur: 5px;
  --motion-origin-translate-y: -5%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-blur-left{
  --motion-origin-blur: 5px;
  --motion-origin-translate-x: 5%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-blur-right{
  --motion-origin-blur: 5px;
  --motion-origin-translate-x: -5%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-blur-up{
  --motion-origin-blur: 5px;
  --motion-origin-translate-y: 5%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-fade{
  --motion-origin-opacity: 0;
  --motion-duration: 500ms;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-focus{
  --motion-origin-blur: 5px;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-slide-down{
  --motion-origin-translate-y: -25%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-slide-down-left{
  --motion-origin-translate-x: 25%;
  --motion-origin-translate-y: -25%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-slide-down-right{
  --motion-origin-translate-x: -25%;
  --motion-origin-translate-y: -25%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-slide-left{
  --motion-origin-translate-x: 25%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-slide-right{
  --motion-origin-translate-x: -25%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-slide-up{
  --motion-origin-translate-y: 25%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-slide-up-left{
  --motion-origin-translate-x: 25%;
  --motion-origin-translate-y: 25%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-slide-up-right{
  --motion-origin-translate-x: -25%;
  --motion-origin-translate-y: 25%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-rebound{
  --motion-origin-translate-x: 25%;
  --motion-translate-timing: var(--motion-spring-bouncier);
  --motion-translate-perceptual-duration-multiplier: 2.035;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-bounce{
  --motion-duration: 300ms;
  --motion-translate-timing: var(--motion-bounce);
  --motion-translate-perceptual-duration-multiplier: 2;
  --motion-origin-opacity: 0;
  --motion-origin-translate-y: -25%;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-expand{
  --motion-origin-scale-x: 50%;
  --motion-origin-scale-y: 50%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-shrink{
  --motion-origin-scale-x: 150%;
  --motion-origin-scale-y: 150%;
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-pop{
  --motion-origin-scale-x: 50%;
  --motion-origin-scale-y: 50%;
  --motion-origin-opacity: 0;
  --motion-scale-timing: var(--motion-spring-bouncier);
  --motion-scale-perceptual-duration-multiplier: 2.035;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-compress{
  --motion-origin-scale-x: 150%;
  --motion-origin-scale-y: 150%;
  --motion-origin-opacity: 0;
  --motion-scale-timing: var(--motion-spring-bouncier);
  --motion-scale-perceptual-duration-multiplier: 2.035;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-shake{
  --motion-duration: 300ms;
  --motion-origin-rotate: 15deg;
  --motion-origin-opacity: 0;
  --motion-rotate-timing: var(--motion-spring-bounciest);
  --motion-rotate-perceptual-duration-multiplier: 5.285;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-wiggle{
  --motion-duration: 300ms;
  --motion-origin-rotate: 15deg;
  --motion-origin-translate-x: -25%;
  --motion-origin-translate-y: -10%;
  --motion-origin-opacity: 0;
  --motion-timing: var(--motion-spring-bounciest);
  --motion-perceptual-duration-multiplier: 5.285;
  --motion-opacity-timing: var(--motion-spring-smooth);
  --motion-opacity-perceptual-duration-multiplier: 1.66;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-confetti{
  display: block;
  -webkit-appearance: none;
  -moz-appearance: none;
       appearance: none;
  position: relative;
  outline: 0;
  z-index: 1;
  margin: 0;
  animation: RomboConfettiPop var(--motion-duration) var(--motion-timing)  both;
}

@keyframes RomboConfettiPop{
  0%{
    opacity: 0;
    transform: scale(1);
  }

  33%{
    opacity: 1;
    transform: scale(1.15);
  }

  50%{
    transform: scale(0.975);
  }

  65%{
    transform: scale(1.025);
  }

  80%{
    transform: scale(0.99);
  }

  87%{
    transform: scale(1.01);
  }

  100%{
    opacity: 1;
    transform: scale(1);
  }
}

.motion-preset-confetti:after{
  display: block;
  animation-duration: var(--motion-duration);
  animation-timing-function: var(--motion-timing);
  animation-iteration-count: 1;
  animation-direction: normal;
  animation-fill-mode: forwards;
  animation-name: bottomfetti;
  position: absolute;
  content: " ";
  z-index: -1;
  width: 100%;
  height: 100%;
  left: -20%;
  top: 100%;
  transition: all var(--motion-timing) var(--motion-duration);
  background-repeat: no-repeat;
  background-image: radial-gradient(circle, #a2dd60 20%, transparent 20%),radial-gradient(circle, transparent 20%, #ee65a9 20%, transparent 30%),radial-gradient(circle, #6092dd 20%, transparent 20%),radial-gradient(circle, #f3c548 20%, transparent 20%),radial-gradient(circle, transparent 10%, #46ec99 15%, transparent 20%),radial-gradient(circle, #f03e47 20%, transparent 20%),radial-gradient(circle, #7b4df7 20%, transparent 20%),radial-gradient(circle, #3ff1bc 20%, transparent 20%);
  background-size: 15% 15%, 20% 20%, 18% 18%, 20% 20%, 15% 15%, 10% 10%, 20% 20%;
}

.motion-preset-confetti:before{
  display: block;
  animation-duration: var(--motion-duration);
  animation-timing-function: var(--motion-timing);
  animation-iteration-count: 1;
  animation-direction: normal;
  animation-fill-mode: forwards;
  animation-name: topfetti;
  position: absolute;
  content: " ";
  width: 100%;
  height: 100%;
  left: -5%;
  background-repeat: no-repeat;
  transition: all var(--motion-timing) var(--motion-duration);
  z-index: -1;
  top: -90%;
  background-image: radial-gradient(circle, #a2dd60 30%, transparent 20%),radial-gradient(circle, transparent 20%, #ee65a9 40%, transparent 20%),radial-gradient(circle, #6092dd 30%, transparent 20%),radial-gradient(circle, #f3c548 30%, transparent 20%),radial-gradient(circle, transparent 10%, #46ec99 15%, transparent 20%),radial-gradient(circle, #f03e47 30%, transparent 20%),radial-gradient(circle, #7b4df7 30%, transparent 30%),radial-gradient(circle, #3ff1bc 30%, transparent 20%),radial-gradient(circle, #48f088 30%, transparent 30%);
  background-size: 10% 10%, 20% 20%, 15% 15%, 20% 20%, 18% 18%, 10% 10%, 15% 15%, 10% 10%, 25% 25%;
}

@keyframes topfetti{
  0%{
    background-position: 5% 90%, 10% 90%, 10% 90%, 15% 90%, 25% 90%, 25% 90%, 40% 90%, 55% 90%, 70% 90%;
  }

  50%{
    background-position: 0% 80%, 0% 20%, 10% 40%, 20% 0%, 30% 30%, 22% 50%, 50% 50%, 65% 20%, 90% 30%;
  }

  100%{
    background-position: 0% 70%, 0% 10%, 10% 30%, 20% -10%, 30% 20%, 22% 40%, 50% 40%, 65% 10%, 90% 20%;
    background-size: 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%;
  }
}

@keyframes bottomfetti{
  0%{
    background-position: 10% -10%, 30% 10%, 55% -10%, 70% -10%, 85% -10%,70% -10%, 70% 0%;
  }

  50%{
    background-position: 0% 80%, 20% 80%, 45% 60%, 60% 100%, 75% 70%, 95% 60%, 105% 0%;
  }

  100%{
    background-position: 0% 90%, 20% 90%, 45% 70%, 60% 110%, 75% 80%, 95% 70%, 110% 10%;
    background-size: 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%;
  }
}

.motion-preset-float{
  --motion-loop-translate-y: 100%;
  --motion-translate-timing: var(--motion-spring-bouncier);
  --motion-translate-perceptual-duration-multiplier: 2.035;
  --motion-duration: 2000ms;
  --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both var(--motion-translate-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-oscillate{
  --motion-loop-translate-y: 15%;
  --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
  --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both var(--motion-translate-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-pulse{
  --motion-loop-scale-x: 1.25;
  --motion-loop-scale-y: 1.25;
  --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
  --motion-scale-loop-animation: motion-scale-loop-mirror calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both var(--motion-scale-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-seesaw{
  --motion-loop-rotate: 6deg;
  --motion-rotate-loop-animation: motion-rotate-loop-mirror calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both var(--motion-rotate-loop-count);
  --motion-rotate-timing: var(--motion-spring-bounciest);
  --motion-rotate-perceptual-duration-multiplier: 5.285;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-stretch{
  --motion-loop-scale-x: 85%;
  --motion-loop-scale-y: 115%;
  --motion-scale-timing: var(--motion-spring-bouncier);
  --motion-scale-perceptual-duration-multiplier: 2.035;
  --motion-scale-loop-animation: motion-scale-loop-mirror calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both var(--motion-scale-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-wobble{
  --motion-loop-translate-x: 15%;
  --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
  --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both var(--motion-translate-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-spin{
  --motion-loop-rotate: 360deg;
  --motion-timing: linear;
  --motion-rotate-loop-animation: motion-rotate-loop-reset calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both var(--motion-rotate-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-preset-blink{
  --motion-loop-opacity: 0;
  --motion-opacity-loop-animation: motion-opacity-loop-mirror calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both var(--motion-opacity-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

.sr-only{
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.not-sr-only{
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.pointer-events-none{
  pointer-events: none;
}

.pointer-events-auto{
  pointer-events: auto;
}

.\!visible{
  visibility: visible !important;
}

.visible{
  visibility: visible;
}

.invisible{
  visibility: hidden;
}

.collapse{
  visibility: collapse;
}

.static{
  position: static;
}

.fixed{
  position: fixed;
}

.absolute{
  position: absolute;
}

.relative{
  position: relative;
}

.sticky{
  position: sticky;
}

.-inset-1{
  inset: -0.25rem;
}

.inset-0{
  inset: 0px;
}

.end-1{
  inset-inline-end: 0.25rem;
}

.isolate{
  isolation: isolate;
}

.isolation-auto{
  isolation: auto;
}

.z-10{
  z-index: 10;
}

.row-start-1{
  grid-row-start: 1;
}

.row-end-6{
  grid-row-end: 6;
}

.float-start{
  float: inline-start;
}

.float-end{
  float: inline-end;
}

.float-right{
  float: right;
}

.float-left{
  float: left;
}

.float-none{
  float: none;
}

.clear-start{
  clear: inline-start;
}

.clear-end{
  clear: inline-end;
}

.clear-left{
  clear: left;
}

.clear-right{
  clear: right;
}

.clear-both{
  clear: both;
}

.clear-none{
  clear: none;
}

.m-3{
  margin: 0.75rem;
}

.m-4{
  margin: 1rem;
}

.mx-auto{
  margin-left: auto;
  margin-right: auto;
}

.mb-14{
  margin-bottom: 3.5rem;
}

.mb-2{
  margin-bottom: 0.5rem;
}

.mb-3{
  margin-bottom: 0.75rem;
}

.mb-8{
  margin-bottom: 2rem;
}

.mr-1{
  margin-right: 0.25rem;
}

.mt-16{
  margin-top: 4rem;
}

.mt-2{
  margin-top: 0.5rem;
}

.mt-20{
  margin-top: 5rem;
}

.mt-3{
  margin-top: 0.75rem;
}

.mt-4{
  margin-top: 1rem;
}

.mt-6{
  margin-top: 1.5rem;
}

.box-border{
  box-sizing: border-box;
}

.box-content{
  box-sizing: content-box;
}

.line-clamp-none{
  overflow: visible;
  display: block;
  -webkit-box-orient: horizontal;
  -webkit-line-clamp: none;
}

.block{
  display: block;
}

.inline-block{
  display: inline-block;
}

.inline{
  display: inline;
}

.flex{
  display: flex;
}

.inline-flex{
  display: inline-flex;
}

.table{
  display: table;
}

.inline-table{
  display: inline-table;
}

.table-caption{
  display: table-caption;
}

.table-cell{
  display: table-cell;
}

.table-column{
  display: table-column;
}

.table-column-group{
  display: table-column-group;
}

.table-footer-group{
  display: table-footer-group;
}

.table-header-group{
  display: table-header-group;
}

.table-row-group{
  display: table-row-group;
}

.table-row{
  display: table-row;
}

.flow-root{
  display: flow-root;
}

.grid{
  display: grid;
}

.inline-grid{
  display: inline-grid;
}

.contents{
  display: contents;
}

.list-item{
  display: list-item;
}

.hidden{
  display: none;
}

.h-0\.5{
  height: 0.125rem;
}

.h-12{
  height: 3rem;
}

.h-\[1px\]{
  height: 1px;
}

.h-\[700px\]{
  height: 700px;
}

.h-full{
  height: 100%;
}

.min-h-28{
  min-height: 7rem;
}

.min-h-screen{
  min-height: 100vh;
}

.w-12{
  width: 3rem;
}

.w-96{
  width: 24rem;
}

.w-\[this-is\\\\\]{
  width: this-is\\;
}

.w-\[this-is\]{
  width: this-is;
}

.w-\[weird-and-invalid\]{
  width: weird-and-invalid;
}

.w-fit{
  width: -moz-fit-content;
  width: fit-content;
}

.w-full{
  width: 100%;
}

.w-screen{
  width: 100vw;
}

.min-w-28{
  min-width: 7rem;
}

.max-w-screen-xl{
  max-width: 1280px;
}

.max-w-sm{
  max-width: 24rem;
}

.flex-1{
  flex: 1 1 0%;
}

.flex-shrink{
  flex-shrink: 1;
}

.shrink{
  flex-shrink: 1;
}

.flex-grow{
  flex-grow: 1;
}

.grow{
  flex-grow: 1;
}

.table-auto{
  table-layout: auto;
}

.table-fixed{
  table-layout: fixed;
}

.caption-top{
  caption-side: top;
}

.caption-bottom{
  caption-side: bottom;
}

.border-collapse{
  border-collapse: collapse;
}

.border-separate{
  border-collapse: separate;
}

.-translate-x-36{
  --tw-translate-x: -9rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-x-48{
  --tw-translate-x: -12rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-2{
  --tw-translate-y: 0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-scale-x-100{
  --tw-scale-x: -1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\!transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-cpu{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-gpu{
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-none{
  transform: none;
}

@keyframes float{
  0%, 100%{
    transform: translateY(10px);
  }

  50%{
    transform: translateY(-10px);
  }
}

.animate-float{
  animation: float 5s ease-in-out infinite;
}

.touch-auto{
  touch-action: auto;
}

.touch-none{
  touch-action: none;
}

.touch-pan-x{
  --tw-pan-x: pan-x;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-left{
  --tw-pan-x: pan-left;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-right{
  --tw-pan-x: pan-right;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-y{
  --tw-pan-y: pan-y;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-up{
  --tw-pan-y: pan-up;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-down{
  --tw-pan-y: pan-down;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pinch-zoom{
  --tw-pinch-zoom: pinch-zoom;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-manipulation{
  touch-action: manipulation;
}

.select-none{
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.select-text{
  -webkit-user-select: text;
     -moz-user-select: text;
          user-select: text;
}

.select-all{
  -webkit-user-select: all;
     -moz-user-select: all;
          user-select: all;
}

.select-auto{
  -webkit-user-select: auto;
     -moz-user-select: auto;
          user-select: auto;
}

.resize-none{
  resize: none;
}

.resize-y{
  resize: vertical;
}

.resize-x{
  resize: horizontal;
}

.resize{
  resize: both;
}

.snap-none{
  scroll-snap-type: none;
}

.snap-x{
  scroll-snap-type: x var(--tw-scroll-snap-strictness);
}

.snap-y{
  scroll-snap-type: y var(--tw-scroll-snap-strictness);
}

.snap-both{
  scroll-snap-type: both var(--tw-scroll-snap-strictness);
}

.snap-mandatory{
  --tw-scroll-snap-strictness: mandatory;
}

.snap-proximity{
  --tw-scroll-snap-strictness: proximity;
}

.snap-start{
  scroll-snap-align: start;
}

.snap-end{
  scroll-snap-align: end;
}

.snap-center{
  scroll-snap-align: center;
}

.snap-align-none{
  scroll-snap-align: none;
}

.snap-normal{
  scroll-snap-stop: normal;
}

.snap-always{
  scroll-snap-stop: always;
}

.list-inside{
  list-style-position: inside;
}

.list-outside{
  list-style-position: outside;
}

.appearance-none{
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.appearance-auto{
  -webkit-appearance: auto;
     -moz-appearance: auto;
          appearance: auto;
}

.break-before-auto{
  -moz-column-break-before: auto;
       break-before: auto;
}

.break-before-avoid{
  -moz-column-break-before: avoid;
       break-before: avoid;
}

.break-before-all{
  -moz-column-break-before: all;
       break-before: all;
}

.break-before-avoid-page{
  -moz-column-break-before: avoid;
       break-before: avoid-page;
}

.break-before-page{
  -moz-column-break-before: page;
       break-before: page;
}

.break-before-left{
  -moz-column-break-before: left;
       break-before: left;
}

.break-before-right{
  -moz-column-break-before: right;
       break-before: right;
}

.break-before-column{
  -moz-column-break-before: column;
       break-before: column;
}

.break-inside-auto{
  -moz-column-break-inside: auto;
       break-inside: auto;
}

.break-inside-avoid{
  -moz-column-break-inside: avoid;
       break-inside: avoid;
}

.break-inside-avoid-page{
  break-inside: avoid-page;
}

.break-inside-avoid-column{
  -moz-column-break-inside: avoid;
       break-inside: avoid-column;
}

.break-after-auto{
  -moz-column-break-after: auto;
       break-after: auto;
}

.break-after-avoid{
  -moz-column-break-after: avoid;
       break-after: avoid;
}

.break-after-all{
  -moz-column-break-after: all;
       break-after: all;
}

.break-after-avoid-page{
  -moz-column-break-after: avoid;
       break-after: avoid-page;
}

.break-after-page{
  -moz-column-break-after: page;
       break-after: page;
}

.break-after-left{
  -moz-column-break-after: left;
       break-after: left;
}

.break-after-right{
  -moz-column-break-after: right;
       break-after: right;
}

.break-after-column{
  -moz-column-break-after: column;
       break-after: column;
}

.grid-flow-row{
  grid-auto-flow: row;
}

.grid-flow-col{
  grid-auto-flow: column;
}

.grid-flow-dense{
  grid-auto-flow: dense;
}

.grid-flow-row-dense{
  grid-auto-flow: row dense;
}

.grid-flow-col-dense{
  grid-auto-flow: column dense;
}

.grid-cols-2{
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-row{
  flex-direction: row;
}

.flex-row-reverse{
  flex-direction: row-reverse;
}

.flex-col{
  flex-direction: column;
}

.flex-col-reverse{
  flex-direction: column-reverse;
}

.flex-wrap{
  flex-wrap: wrap;
}

.flex-wrap-reverse{
  flex-wrap: wrap-reverse;
}

.flex-nowrap{
  flex-wrap: nowrap;
}

.place-content-center{
  place-content: center;
}

.place-content-start{
  place-content: start;
}

.place-content-end{
  place-content: end;
}

.place-content-between{
  place-content: space-between;
}

.place-content-around{
  place-content: space-around;
}

.place-content-evenly{
  place-content: space-evenly;
}

.place-content-baseline{
  place-content: baseline;
}

.place-content-stretch{
  place-content: stretch;
}

.place-items-start{
  place-items: start;
}

.place-items-end{
  place-items: end;
}

.place-items-center{
  place-items: center;
}

.place-items-baseline{
  place-items: baseline;
}

.place-items-stretch{
  place-items: stretch;
}

.content-normal{
  align-content: normal;
}

.content-center{
  align-content: center;
}

.content-start{
  align-content: flex-start;
}

.content-end{
  align-content: flex-end;
}

.content-between{
  align-content: space-between;
}

.content-around{
  align-content: space-around;
}

.content-evenly{
  align-content: space-evenly;
}

.content-baseline{
  align-content: baseline;
}

.content-stretch{
  align-content: stretch;
}

.items-start{
  align-items: flex-start;
}

.items-end{
  align-items: flex-end;
}

.items-center{
  align-items: center;
}

.items-baseline{
  align-items: baseline;
}

.items-stretch{
  align-items: stretch;
}

.justify-normal{
  justify-content: normal;
}

.justify-start{
  justify-content: flex-start;
}

.justify-end{
  justify-content: flex-end;
}

.justify-center{
  justify-content: center;
}

.justify-between{
  justify-content: space-between;
}

.justify-around{
  justify-content: space-around;
}

.justify-evenly{
  justify-content: space-evenly;
}

.justify-stretch{
  justify-content: stretch;
}

.justify-items-start{
  justify-items: start;
}

.justify-items-end{
  justify-items: end;
}

.justify-items-center{
  justify-items: center;
}

.justify-items-stretch{
  justify-items: stretch;
}

.gap-10{
  gap: 2.5rem;
}

.gap-16{
  gap: 4rem;
}

.gap-2{
  gap: 0.5rem;
}

.gap-4{
  gap: 1rem;
}

.gap-6{
  gap: 1.5rem;
}

.space-x-2 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-reverse > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 1;
}

.space-x-reverse > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 1;
}

.divide-x > :not([hidden]) ~ :not([hidden]){
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]){
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-y-reverse > :not([hidden]) ~ :not([hidden]){
  --tw-divide-y-reverse: 1;
}

.divide-x-reverse > :not([hidden]) ~ :not([hidden]){
  --tw-divide-x-reverse: 1;
}

.divide-solid > :not([hidden]) ~ :not([hidden]){
  border-style: solid;
}

.divide-dashed > :not([hidden]) ~ :not([hidden]){
  border-style: dashed;
}

.divide-dotted > :not([hidden]) ~ :not([hidden]){
  border-style: dotted;
}

.divide-double > :not([hidden]) ~ :not([hidden]){
  border-style: double;
}

.divide-none > :not([hidden]) ~ :not([hidden]){
  border-style: none;
}

.place-self-auto{
  place-self: auto;
}

.place-self-start{
  place-self: start;
}

.place-self-end{
  place-self: end;
}

.place-self-center{
  place-self: center;
}

.place-self-stretch{
  place-self: stretch;
}

.self-auto{
  align-self: auto;
}

.self-start{
  align-self: flex-start;
}

.self-end{
  align-self: flex-end;
}

.self-center{
  align-self: center;
}

.self-stretch{
  align-self: stretch;
}

.self-baseline{
  align-self: baseline;
}

.justify-self-auto{
  justify-self: auto;
}

.justify-self-start{
  justify-self: start;
}

.justify-self-end{
  justify-self: end;
}

.justify-self-center{
  justify-self: center;
}

.justify-self-stretch{
  justify-self: stretch;
}

.overflow-auto{
  overflow: auto;
}

.overflow-hidden{
  overflow: hidden;
}

.overflow-clip{
  overflow: clip;
}

.overflow-visible{
  overflow: visible;
}

.overflow-scroll{
  overflow: scroll;
}

.overflow-x-auto{
  overflow-x: auto;
}

.overflow-y-auto{
  overflow-y: auto;
}

.overflow-x-hidden{
  overflow-x: hidden;
}

.overflow-y-hidden{
  overflow-y: hidden;
}

.overflow-x-clip{
  overflow-x: clip;
}

.overflow-y-clip{
  overflow-y: clip;
}

.overflow-x-visible{
  overflow-x: visible;
}

.overflow-y-visible{
  overflow-y: visible;
}

.overflow-x-scroll{
  overflow-x: scroll;
}

.overflow-y-scroll{
  overflow-y: scroll;
}

.overscroll-auto{
  overscroll-behavior: auto;
}

.overscroll-contain{
  overscroll-behavior: contain;
}

.overscroll-none{
  overscroll-behavior: none;
}

.overscroll-y-auto{
  overscroll-behavior-y: auto;
}

.overscroll-y-contain{
  overscroll-behavior-y: contain;
}

.overscroll-y-none{
  overscroll-behavior-y: none;
}

.overscroll-x-auto{
  overscroll-behavior-x: auto;
}

.overscroll-x-contain{
  overscroll-behavior-x: contain;
}

.overscroll-x-none{
  overscroll-behavior-x: none;
}

.scroll-auto{
  scroll-behavior: auto;
}

.scroll-smooth{
  scroll-behavior: smooth;
}

.truncate{
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.overflow-ellipsis{
  text-overflow: ellipsis;
}

.text-ellipsis{
  text-overflow: ellipsis;
}

.text-clip{
  text-overflow: clip;
}

.hyphens-none{
  -webkit-hyphens: none;
          hyphens: none;
}

.hyphens-manual{
  -webkit-hyphens: manual;
          hyphens: manual;
}

.hyphens-auto{
  -webkit-hyphens: auto;
          hyphens: auto;
}

.whitespace-normal{
  white-space: normal;
}

.whitespace-nowrap{
  white-space: nowrap;
}

.whitespace-pre{
  white-space: pre;
}

.whitespace-pre-line{
  white-space: pre-line;
}

.whitespace-pre-wrap{
  white-space: pre-wrap;
}

.whitespace-break-spaces{
  white-space: break-spaces;
}

.text-wrap{
  text-wrap: wrap;
}

.text-nowrap{
  text-wrap: nowrap;
}

.text-balance{
  text-wrap: balance;
}

.text-pretty{
  text-wrap: pretty;
}

.break-normal{
  overflow-wrap: normal;
  word-break: normal;
}

.break-words{
  overflow-wrap: break-word;
}

.break-all{
  word-break: break-all;
}

.break-keep{
  word-break: keep-all;
}

.rounded{
  border-radius: 0.25rem;
}

.rounded-2xl{
  border-radius: 1rem;
}

.rounded-lg{
  border-radius: 0.5rem;
}

.rounded-xl{
  border-radius: 0.75rem;
}

.rounded-b{
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-e{
  border-start-end-radius: 0.25rem;
  border-end-end-radius: 0.25rem;
}

.rounded-l{
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-r{
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

.rounded-s{
  border-start-start-radius: 0.25rem;
  border-end-start-radius: 0.25rem;
}

.rounded-t{
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.rounded-bl{
  border-bottom-left-radius: 0.25rem;
}

.rounded-br{
  border-bottom-right-radius: 0.25rem;
}

.rounded-ee{
  border-end-end-radius: 0.25rem;
}

.rounded-es{
  border-end-start-radius: 0.25rem;
}

.rounded-se{
  border-start-end-radius: 0.25rem;
}

.rounded-ss{
  border-start-start-radius: 0.25rem;
}

.rounded-tl{
  border-top-left-radius: 0.25rem;
}

.rounded-tr{
  border-top-right-radius: 0.25rem;
}

.border{
  border-width: 1px;
}

.border-2{
  border-width: 2px;
}

.border-4{
  border-width: 4px;
}

.border-x{
  border-left-width: 1px;
  border-right-width: 1px;
}

.border-y{
  border-top-width: 1px;
  border-bottom-width: 1px;
}

.border-b{
  border-bottom-width: 1px;
}

.border-e{
  border-inline-end-width: 1px;
}

.border-l{
  border-left-width: 1px;
}

.border-r{
  border-right-width: 1px;
}

.border-s{
  border-inline-start-width: 1px;
}

.border-t{
  border-top-width: 1px;
}

.border-t-0{
  border-top-width: 0px;
}

.border-solid{
  border-style: solid;
}

.border-dashed{
  border-style: dashed;
}

.border-dotted{
  border-style: dotted;
}

.border-double{
  border-style: double;
}

.border-hidden{
  border-style: hidden;
}

.border-none{
  border-style: none;
}

.border-purple-100{
  --tw-border-opacity: 1;
  border-color: rgb(243 232 255 / var(--tw-border-opacity));
}

.border-purple-200{
  --tw-border-opacity: 1;
  border-color: rgb(233 213 255 / var(--tw-border-opacity));
}

.border-purple-500{
  --tw-border-opacity: 1;
  border-color: rgb(168 85 247 / var(--tw-border-opacity));
}

.border-purple-700{
  --tw-border-opacity: 1;
  border-color: rgb(126 34 206 / var(--tw-border-opacity));
}

.border-white{
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.bg-\[rgb\(255\2c 0\2c 0\)\]{
  --tw-bg-opacity: 1;
  background-color: rgb(255 0 0 / var(--tw-bg-opacity));
}

.bg-bgColour{
  --tw-bg-opacity: 1;
  background-color: rgb(26 21 30 / var(--tw-bg-opacity));
}

.bg-primaryColour{
  --tw-bg-opacity: 1;
  background-color: rgb(165 126 198 / var(--tw-bg-opacity));
}

.bg-purple-200{
  --tw-bg-opacity: 1;
  background-color: rgb(233 213 255 / var(--tw-bg-opacity));
}

.bg-purple-700{
  --tw-bg-opacity: 1;
  background-color: rgb(126 34 206 / var(--tw-bg-opacity));
}

.bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-black{
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-red-500{
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

.bg-gradient-to-b{
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.bg-gradient-to-br{
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.bg-gradient-to-t{
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

.bg-gradient-to-tr{
  background-image: linear-gradient(to top right, var(--tw-gradient-stops));
}

.from-bgColour{
  --tw-gradient-from: #1a151e var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(26 21 30 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-black{
  --tw-gradient-from: #000 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-gray-500{
  --tw-gradient-from: #6b7280 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(107 114 128 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-purple-300{
  --tw-gradient-from: #d8b4fe var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(216 180 254 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-purple-400{
  --tw-gradient-from: #c084fc var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(192 132 252 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-purple-700{
  --tw-gradient-from: #7e22ce var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(126 34 206 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-white{
  --tw-gradient-from: #fff var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-purple-900{
  --tw-gradient-from: #581c87 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(88 28 135 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.via-black{
  --tw-gradient-to: rgb(0 0 0 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #000 var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.to-bgColour{
  --tw-gradient-to: #1a151e var(--tw-gradient-to-position);
}

.to-purple-200{
  --tw-gradient-to: #e9d5ff var(--tw-gradient-to-position);
}

.to-purple-400{
  --tw-gradient-to: #c084fc var(--tw-gradient-to-position);
}

.to-purple-800{
  --tw-gradient-to: #6b21a8 var(--tw-gradient-to-position);
}

.to-transparent{
  --tw-gradient-to: transparent var(--tw-gradient-to-position);
}

.to-purple-900{
  --tw-gradient-to: #581c87 var(--tw-gradient-to-position);
}

.decoration-slice{
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
}

.decoration-clone{
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.box-decoration-slice{
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
}

.box-decoration-clone{
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.bg-fixed{
  background-attachment: fixed;
}

.bg-local{
  background-attachment: local;
}

.bg-scroll{
  background-attachment: scroll;
}

.bg-clip-border{
  background-clip: border-box;
}

.bg-clip-padding{
  background-clip: padding-box;
}

.bg-clip-content{
  background-clip: content-box;
}

.bg-clip-text{
  -webkit-background-clip: text;
          background-clip: text;
}

.bg-repeat{
  background-repeat: repeat;
}

.bg-no-repeat{
  background-repeat: no-repeat;
}

.bg-repeat-x{
  background-repeat: repeat-x;
}

.bg-repeat-y{
  background-repeat: repeat-y;
}

.bg-repeat-round{
  background-repeat: round;
}

.bg-repeat-space{
  background-repeat: space;
}

.bg-origin-border{
  background-origin: border-box;
}

.bg-origin-padding{
  background-origin: padding-box;
}

.bg-origin-content{
  background-origin: content-box;
}

.object-contain{
  -o-object-fit: contain;
     object-fit: contain;
}

.object-cover{
  -o-object-fit: cover;
     object-fit: cover;
}

.object-fill{
  -o-object-fit: fill;
     object-fit: fill;
}

.object-none{
  -o-object-fit: none;
     object-fit: none;
}

.object-scale-down{
  -o-object-fit: scale-down;
     object-fit: scale-down;
}

.p-1{
  padding: 0.25rem;
}

.p-2{
  padding: 0.5rem;
}

.p-3{
  padding: 0.75rem;
}

.p-4{
  padding: 1rem;
}

.p-6{
  padding: 1.5rem;
}

.px-1{
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-1\.5{
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.px-10{
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.px-2{
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-5{
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-6{
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.px-8{
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-12{
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-2\.5{
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}

.py-8{
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.pb-2{
  padding-bottom: 0.5rem;
}

.pl-1{
  padding-left: 0.25rem;
}

.pt-12{
  padding-top: 3rem;
}

.pt-2{
  padding-top: 0.5rem;
}

.pt-5{
  padding-top: 1.25rem;
}

.pt-8{
  padding-top: 2rem;
}

.text-left{
  text-align: left;
}

.text-center{
  text-align: center;
}

.text-right{
  text-align: right;
}

.text-justify{
  text-align: justify;
}

.text-start{
  text-align: start;
}

.text-end{
  text-align: end;
}

.align-baseline{
  vertical-align: baseline;
}

.align-top{
  vertical-align: top;
}

.align-middle{
  vertical-align: middle;
}

.align-bottom{
  vertical-align: bottom;
}

.align-text-top{
  vertical-align: text-top;
}

.align-text-bottom{
  vertical-align: text-bottom;
}

.align-sub{
  vertical-align: sub;
}

.align-super{
  vertical-align: super;
}

.font-sfpro{
  font-family: SF Pro Display, sans-serif;
}

.text-2xl{
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl{
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-4xl{
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-5xl{
  font-size: 3rem;
  line-height: 1;
}

.text-\[11px\]{
  font-size: 11px;
}

.text-lg{
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl{
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.font-bold{
  font-weight: 700;
}

.font-semibold{
  font-weight: 600;
}

.uppercase{
  text-transform: uppercase;
}

.lowercase{
  text-transform: lowercase;
}

.capitalize{
  text-transform: capitalize;
}

.normal-case{
  text-transform: none;
}

.italic{
  font-style: italic;
}

.not-italic{
  font-style: normal;
}

.normal-nums{
  font-variant-numeric: normal;
}

.ordinal{
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.slashed-zero{
  --tw-slashed-zero: slashed-zero;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.lining-nums{
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.oldstyle-nums{
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.proportional-nums{
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.tabular-nums{
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.diagonal-fractions{
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.stacked-fractions{
  --tw-numeric-fraction: stacked-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.text-\[\#336699\]\/\[\.35\]{
  color: rgb(51 102 153 / .35);
}

.text-black{
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-blue-500{
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.text-purple-200{
  --tw-text-opacity: 1;
  color: rgb(233 213 255 / var(--tw-text-opacity));
}

.text-purple-800{
  --tw-text-opacity: 1;
  color: rgb(107 33 168 / var(--tw-text-opacity));
}

.text-purple-950{
  --tw-text-opacity: 1;
  color: rgb(59 7 100 / var(--tw-text-opacity));
}

.text-red-600{
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity));
}

.text-transparent{
  color: transparent;
}

.text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-bgColour{
  --tw-text-opacity: 1;
  color: rgb(26 21 30 / var(--tw-text-opacity));
}

.underline{
  text-decoration-line: underline;
}

.overline{
  text-decoration-line: overline;
}

.line-through{
  text-decoration-line: line-through;
}

.no-underline{
  text-decoration-line: none;
}

.decoration-solid{
  text-decoration-style: solid;
}

.decoration-double{
  text-decoration-style: double;
}

.decoration-dotted{
  text-decoration-style: dotted;
}

.decoration-dashed{
  text-decoration-style: dashed;
}

.decoration-wavy{
  text-decoration-style: wavy;
}

.antialiased{
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.subpixel-antialiased{
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

.opacity-60{
  opacity: 0.6;
}

.opacity-80{
  opacity: 0.8;
}

.bg-blend-normal{
  background-blend-mode: normal;
}

.bg-blend-multiply{
  background-blend-mode: multiply;
}

.bg-blend-screen{
  background-blend-mode: screen;
}

.bg-blend-overlay{
  background-blend-mode: overlay;
}

.bg-blend-darken{
  background-blend-mode: darken;
}

.bg-blend-lighten{
  background-blend-mode: lighten;
}

.bg-blend-color-dodge{
  background-blend-mode: color-dodge;
}

.bg-blend-color-burn{
  background-blend-mode: color-burn;
}

.bg-blend-hard-light{
  background-blend-mode: hard-light;
}

.bg-blend-soft-light{
  background-blend-mode: soft-light;
}

.bg-blend-difference{
  background-blend-mode: difference;
}

.bg-blend-exclusion{
  background-blend-mode: exclusion;
}

.bg-blend-hue{
  background-blend-mode: hue;
}

.bg-blend-saturation{
  background-blend-mode: saturation;
}

.bg-blend-color{
  background-blend-mode: color;
}

.bg-blend-luminosity{
  background-blend-mode: luminosity;
}

.mix-blend-normal{
  mix-blend-mode: normal;
}

.mix-blend-multiply{
  mix-blend-mode: multiply;
}

.mix-blend-screen{
  mix-blend-mode: screen;
}

.mix-blend-overlay{
  mix-blend-mode: overlay;
}

.mix-blend-darken{
  mix-blend-mode: darken;
}

.mix-blend-lighten{
  mix-blend-mode: lighten;
}

.mix-blend-color-dodge{
  mix-blend-mode: color-dodge;
}

.mix-blend-color-burn{
  mix-blend-mode: color-burn;
}

.mix-blend-hard-light{
  mix-blend-mode: hard-light;
}

.mix-blend-soft-light{
  mix-blend-mode: soft-light;
}

.mix-blend-difference{
  mix-blend-mode: difference;
}

.mix-blend-exclusion{
  mix-blend-mode: exclusion;
}

.mix-blend-hue{
  mix-blend-mode: hue;
}

.mix-blend-saturation{
  mix-blend-mode: saturation;
}

.mix-blend-color{
  mix-blend-mode: color;
}

.mix-blend-luminosity{
  mix-blend-mode: luminosity;
}

.mix-blend-plus-darker{
  mix-blend-mode: plus-darker;
}

.mix-blend-plus-lighter{
  mix-blend-mode: plus-lighter;
}

.\!shadow{
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1) !important;
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.shadow{
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md{
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-purple-800{
  --tw-shadow-color: #6b21a8;
  --tw-shadow: var(--tw-shadow-colored);
}

.outline-none{
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline{
  outline-style: solid;
}

.outline-dashed{
  outline-style: dashed;
}

.outline-dotted{
  outline-style: dotted;
}

.outline-double{
  outline-style: double;
}

.ring{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-inset{
  --tw-ring-inset: inset;
}

.blur{
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.blur-md{
  --tw-blur: blur(12px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow{
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale{
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert{
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.saturate-0{
  --tw-saturate: saturate(0);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.sepia{
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.\!filter{
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.filter{
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter-none{
  filter: none;
}

.backdrop-blur{
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-grayscale{
  --tw-backdrop-grayscale: grayscale(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-invert{
  --tw-backdrop-invert: invert(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-sepia{
  --tw-backdrop-sepia: sepia(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter{
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter-none{
  -webkit-backdrop-filter: none;
  backdrop-filter: none;
}

.transition{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform{
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.delay-1000{
  transition-delay: 1000ms;
}

.delay-200{
  transition-delay: 200ms;
}

.duration-300{
  transition-duration: 300ms;
}

.duration-500{
  transition-duration: 500ms;
}

.duration-700{
  transition-duration: 700ms;
}

.ease-in{
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-in-out{
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-linear{
  transition-timing-function: linear;
}

.ease-out{
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.contain-none{
  contain: none;
}

.contain-content{
  contain: content;
}

.contain-strict{
  contain: strict;
}

.contain-size{
  --tw-contain-size: size;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-inline-size{
  --tw-contain-size: inline-size;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-layout{
  --tw-contain-layout: layout;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-paint{
  --tw-contain-paint: paint;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-style{
  --tw-contain-style: style;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.content-\[\'this-is-also-valid\]-weirdly-enough\'\]{
  --tw-content: 'this-is-also-valid]-weirdly-enough';
  content: var(--tw-content);
}

.forced-color-adjust-auto{
  forced-color-adjust: auto;
}

.forced-color-adjust-none{
  forced-color-adjust: none;
}

@media screen and (prefers-reduced-motion: no-preference){
  @keyframes motion-scale-in{
    0%{
      scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
    }

    100%{
      scale: 1 1;
    }
  }

  @keyframes motion-scale-out{
    0%{
      scale: 1 1;
    }

    100%{
      scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
    }
  }

  @keyframes motion-scale-loop-mirror{
    0%, 100%{
      scale: 1 1;
    }

    50%{
      scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
    }
  }

  @keyframes motion-scale-loop-reset{
    0%{
      scale: 1 1;
    }

    100%{
      scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
    }
  }

  @keyframes motion-translate-in{
    0%{
      translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
    }

    100%{
      translate: 0 0;
    }
  }

  @keyframes motion-translate-out{
    0%{
      translate: 0 0;
    }

    100%{
      translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
    }
  }

  @keyframes motion-translate-loop-mirror{
    0%, 100%{
      translate: 0 0;
    }

    50%{
      translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
    }
  }

  @keyframes motion-translate-loop-reset{
    0%{
      translate: 0 0;
    }

    100%{
      translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
    }
  }

  @keyframes motion-rotate-in{
    0%{
      rotate: var(--motion-origin-rotate);
    }

    100%{
      rotate: 0;
    }
  }

  @keyframes motion-rotate-out{
    0%{
      rotate: 0;
    }

    100%{
      rotate: var(--motion-end-rotate);
    }
  }

  @keyframes motion-rotate-loop-mirror{
    0%, 100%{
      rotate: 0deg;
    }

    50%{
      rotate: var(--motion-loop-rotate);
    }
  }

  @keyframes motion-rotate-loop-reset{
    0%{
    }

    100%{
      rotate: var(--motion-loop-rotate);
    }
  }
}

@keyframes motion-filter-in{
  0%{
    filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
  }

  100%{
    filter: blur(0) grayscale(0);
  }
}

@keyframes motion-filter-out{
  0%{
    filter: blur(0) grayscale(0);
  }

  100%{
    filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
  }
}

@keyframes motion-filter-loop-mirror{
  0%, 100%{
    filter: blur(0) grayscale(0);
  }

  50%{
    filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
  }
}

@keyframes motion-filter-loop-reset{
  0%{
    filter: blur(0) grayscale(0);
  }

  100%{
    filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
  }
}

@keyframes motion-opacity-in{
  0%{
    opacity: var(--motion-origin-opacity);
  }
}

@keyframes motion-opacity-out{
  100%{
    opacity: var(--motion-end-opacity);
  }
}

@keyframes motion-opacity-loop-mirror{
  0%, 100%{
  }

  50%{
    opacity: var(--motion-loop-opacity);
  }
}

@keyframes motion-opacity-loop-reset{
  0%{
  }

  100%{
    opacity: var(--motion-loop-opacity);
  }
}

@keyframes motion-background-color-in{
  0%{
    background-color: var(--motion-origin-background-color);
  }
}

@keyframes motion-background-color-out{
  100%{
    background-color: var(--motion-end-background-color);
  }
}

@keyframes motion-background-color-loop-mirror{
  0%, 100%{
  }

  50%{
    background-color: var(--motion-loop-background-color);
  }
}

@keyframes motion-background-color-loop-reset{
  0%{
  }

  100%{
    background-color: var(--motion-loop-background-color);
  }
}

@keyframes motion-text-color-in{
  0%{
    color: var(--motion-origin-text-color);
  }
}

@keyframes motion-text-color-out{
  100%{
    color: var(--motion-end-text-color);
  }
}

@keyframes motion-text-color-loop-mirror{
  0%, 100%{
  }

  50%{
    color: var(--motion-loop-text-color);
  }
}

@keyframes motion-text-color-loop-reset{
  0%{
  }

  100%{
    color: var(--motion-loop-text-color);
  }
}

.motion-scale-in{
  --motion-origin-scale-x: 50%;
  --motion-origin-scale-y: 50%;
  --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-scale-out{
  --motion-end-scale-x: 50%;
  --motion-end-scale-y: 50%;
  --motion-scale-out-animation: motion-scale-out calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-scale-x-in{
  --motion-origin-scale-x: 50%;
  --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-scale-x-out{
  --motion-end-scale-x: 50%;
  --motion-scale-out-animation: motion-scale-out calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-scale-y-in{
  --motion-origin-scale-y: 50%;
  --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-scale-y-out{
  --motion-end-scale-y: 50%;
  --motion-scale-out-animation: motion-scale-out calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-scale-loop{
  --motion-loop-scale-x: 50%;
  --motion-loop-scale-y: 50%;
  --motion-scale-loop-animation: motion-scale-loop-mirror calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both var(--motion-scale-loop-count);
  animation-composition: accumulate;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-scale-x-loop{
  --motion-loop-scale-x: 50%;
  --motion-scale-loop-animation: motion-scale-loop-mirror calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both var(--motion-scale-loop-count);
  animation-composition: accumulate;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-scale-y-loop{
  --motion-loop-scale-y: 50%;
  --motion-scale-loop-animation: motion-scale-loop-mirror calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both var(--motion-scale-loop-count);
  animation-composition: accumulate;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-translate-x-in{
  --motion-origin-translate-x: 25%;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-translate-x-out{
  --motion-end-translate-x: 25%;
  --motion-translate-out-animation: motion-translate-out calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-translate-y-in{
  --motion-origin-translate-y: 25%;
  --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-translate-y-out{
  --motion-end-translate-y: 25%;
  --motion-translate-out-animation: motion-translate-out calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-translate-x-loop{
  --motion-loop-translate-x: 25%;
  --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both var(--motion-translate-loop-count);
  animation-composition: accumulate;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-translate-y-loop{
  --motion-loop-translate-y: 25%;
  --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both var(--motion-translate-loop-count);
  animation-composition: accumulate;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-rotate-in{
  --motion-origin-rotate: 12deg;
  --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-rotate-out{
  --motion-end-rotate: 12deg;
  --motion-rotate-out-animation: motion-rotate-out calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-rotate-loop{
  --motion-loop-rotate: 12deg;
  --motion-rotate-loop-animation: motion-rotate-loop-mirror calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both var(--motion-rotate-loop-count);
  animation-composition: accumulate;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-blur-in{
  --motion-origin-blur: 8px;
  --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-blur-out{
  --motion-end-blur: 8px;
  --motion-filter-out-animation: motion-filter-out calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-blur-loop{
  --motion-loop-blur: 8px;
  --motion-filter-loop-animation: motion-filter-loop-mirror calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both var(--motion-filter-loop-count);
  animation-composition: accumulate;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-grayscale-in{
  --motion-origin-grayscale: 100%;
  --motion-filter-in-animation: motion-filter-in calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-grayscale-out{
  --motion-end-grayscale: 100%;
  --motion-filter-out-animation: motion-filter-out calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-grayscale-loop{
  --motion-loop-grayscale: 100%;
  --motion-filter-loop-animation: motion-filter-loop-mirror calc(var(--motion-filter-duration) * var(--motion-filter-perceptual-duration-multiplier)) var(--motion-filter-timing) var(--motion-filter-delay) both var(--motion-filter-loop-count);
  animation-composition: accumulate;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-opacity-in{
  --motion-origin-opacity: 0;
  --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-opacity-out{
  --motion-end-opacity: 0;
  --motion-opacity-out-animation: motion-opacity-out calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
  animation: var(--motion-all-exit-animations);
}

.motion-opacity-loop{
  --motion-loop-opacity: 0;
  --motion-opacity-loop-animation: motion-opacity-loop-mirror calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both var(--motion-opacity-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

.motion-duration{
  --motion-duration: 150ms;
}

.motion-delay{
  --motion-delay: 150ms;
}

.motion-ease{
  --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
  --motion-perceptual-duration-multiplier: 1;
}

.motion-paused{
  animation-play-state: paused;
}

.motion-paused::before{
  animation-play-state: paused;
}

.motion-paused::after{
  animation-play-state: paused;
}

.motion-running{
  animation-play-state: running;
}

.motion-running::before{
  animation-play-state: running;
}

.motion-running::after{
  animation-play-state: running;
}

@keyframes typing {
  from {
    width: 0;
  }

  to {
    width: 100%;
  }
}

@keyframes blink {
  50% {
    border-color: transparent;
  }
}

.typing-effect {
  overflow: hidden;
  /* Ensures the text stays within its container */
  white-space: nowrap;
  /* Prevents text from wrapping */
  border-right: 3px solid #a57ec6;
  /* Cursor color (matches primary color) */
  animation: typing 3s steps(20, end), blink 0.75s step-end infinite;
}

html, body {
  overflow-x: hidden;
  max-width: 100vw;
}

@keyframes appear{
  from{
    opacity:0;
    scale:0.5;
  }

  to{
    opacity: 1;
    scale: 1;
  }
}

.animated-border {
  animation: borderColorChange 3s linear infinite;
}

@keyframes borderColorChange {
  0% {
    border-color: white;
  }

  50% {
    border-color: #9a7af9;
  }

  100% {
    border-color: #e0e0ff;
  }
}

.hover\:motion-preset-oscillate-sm:hover{
  --motion-loop-translate-y: 5%;
  --motion-timing: cubic-bezier(0.4, 0, 0.2, 1);
  --motion-translate-loop-animation: motion-translate-loop-mirror calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both var(--motion-translate-loop-count);
  animation: var(--motion-all-loop-and-enter-animations);
}

@media (min-width: 640px){
  .sm\:container{
    width: 100%;
  }

  @media (min-width: 640px){
    .sm\:container{
      max-width: 640px;
    }
  }

  @media (min-width: 768px){
    .sm\:container{
      max-width: 768px;
    }
  }

  @media (min-width: 1024px){
    .sm\:container{
      max-width: 1024px;
    }
  }

  @media (min-width: 1280px){
    .sm\:container{
      max-width: 1280px;
    }
  }

  @media (min-width: 1536px){
    .sm\:container{
      max-width: 1536px;
    }
  }
}

.hover\:-translate-y-1:hover{
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-105:hover{
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-110:hover{
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-95:hover{
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:border-primaryColour:hover{
  --tw-border-opacity: 1;
  border-color: rgb(165 126 198 / var(--tw-border-opacity));
}

.hover\:border-purple-500:hover{
  --tw-border-opacity: 1;
  border-color: rgb(168 85 247 / var(--tw-border-opacity));
}

.hover\:bg-gradient-to-t:hover{
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

.hover\:text-base:hover{
  font-size: 1rem;
  line-height: 1.5rem;
}

.hover\:font-bold:hover{
  font-weight: 700;
}

.hover\:text-white:hover{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.hover\:opacity-95:hover{
  opacity: 0.95;
}

.hover\:shadow-lg:hover{
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:saturate-100:hover{
  --tw-saturate: saturate(1);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.before\:hover\:text-center:hover::before{
  content: var(--tw-content);
  text-align: center;
}

.hover\:before\:text-center:hover::before{
  content: var(--tw-content);
  text-align: center;
}

.focus\:hover\:text-center:hover:focus{
  text-align: center;
}

.hover\:focus\:text-center:focus:hover{
  text-align: center;
}

.group:hover .group-hover\:-inset-0\.5{
  inset: -0.125rem;
}

.group:hover .group-hover\:inline-block{
  display: inline-block;
}

.group:hover .group-hover\:hidden{
  display: none;
}

.group:hover .group-hover\:bg-gradient-to-t{
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

@media (min-width: 640px){
  .sm\:m-10{
    margin: 2.5rem;
  }

  .sm\:mx-5{
    margin-left: 1.25rem;
    margin-right: 1.25rem;
  }

  .sm\:mx-auto{
    margin-left: auto;
    margin-right: auto;
  }

  .sm\:mt-0{
    margin-top: 0px;
  }

  .sm\:mt-32{
    margin-top: 8rem;
  }

  .sm\:hidden{
    display: none;
  }

  .sm\:w-auto{
    width: auto;
  }

  .sm\:flex-row{
    flex-direction: row;
  }

  .sm\:items-center{
    align-items: center;
  }

  .sm\:justify-center{
    justify-content: center;
  }

  .sm\:px-6{
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .sm\:pt-4{
    padding-top: 1rem;
  }

  .sm\:text-center{
    text-align: center;
  }

  .sm\:underline{
    text-decoration-line: underline;
  }
}

@media (min-width: 768px){
  .md\:mx-auto{
    margin-left: auto;
    margin-right: auto;
  }

  .md\:mt-1{
    margin-top: 0.25rem;
  }

  .md\:mt-14{
    margin-top: 3.5rem;
  }

  .md\:flex{
    display: flex;
  }

  .md\:hidden{
    display: none;
  }

  .md\:min-h-32{
    min-height: 8rem;
  }

  .md\:min-w-32{
    min-width: 8rem;
  }

  .md\:max-w-5xl{
    max-width: 64rem;
  }

  .md\:pt-32{
    padding-top: 8rem;
  }

  .md\:text-6xl{
    font-size: 3.75rem;
    line-height: 1;
  }

  .md\:text-\[17px\]{
    font-size: 17px;
  }

  .md\:text-sm{
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
}

@media (min-width: 1024px){
  .lg\:row-start-1{
    grid-row-start: 1;
  }

  .lg\:row-start-2{
    grid-row-start: 2;
  }

  .lg\:row-start-3{
    grid-row-start: 3;
  }

  .lg\:row-end-2{
    grid-row-end: 2;
  }

  .lg\:row-end-3{
    grid-row-end: 3;
  }

  .lg\:row-end-6{
    grid-row-end: 6;
  }

  .lg\:ml-40{
    margin-left: 10rem;
  }

  .lg\:mt-2{
    margin-top: 0.5rem;
  }

  .lg\:mt-32{
    margin-top: 8rem;
  }

  .lg\:flex{
    display: flex;
  }

  .lg\:grid{
    display: grid;
  }

  .lg\:hidden{
    display: none;
  }

  .lg\:w-1\/2{
    width: 50%;
  }

  .lg\:w-80{
    width: 20rem;
  }

  .lg\:grid-cols-3{
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .lg\:grid-rows-\[300px\]{
    grid-template-rows: 300px;
  }

  .lg\:flex-row{
    flex-direction: row;
  }

  .lg\:gap-3{
    gap: 0.75rem;
  }

  .lg\:px-1{
    padding-left: 0.25rem;
    padding-right: 0.25rem;
  }

  .lg\:px-8{
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .lg\:pt-40{
    padding-top: 10rem;
  }

  .lg\:text-3xl{
    font-size: 1.875rem;
    line-height: 2.25rem;
  }

  .lg\:text-6xl{
    font-size: 3.75rem;
    line-height: 1;
  }

  .lg\:text-8xl{
    font-size: 6rem;
    line-height: 1;
  }
}

@media (min-width: 1280px){
  .xl\:row-end-5{
    grid-row-end: 5;
  }

  .xl\:-mt-4{
    margin-top: -1rem;
  }

  .xl\:max-w-7xl{
    max-width: 80rem;
  }

  .xl\:grid-rows-\[250px\]{
    grid-template-rows: 250px;
  }
}

@media (min-width: 1536px){
  .\32xl\:row-start-1{
    grid-row-start: 1;
  }

  .\32xl\:row-start-3{
    grid-row-start: 3;
  }

  .\32xl\:row-start-4{
    grid-row-start: 4;
  }

  .\32xl\:row-end-3{
    grid-row-end: 3;
  }

  .\32xl\:row-end-4{
    grid-row-end: 4;
  }

  .\32xl\:row-end-6{
    grid-row-end: 6;
  }

  .\32xl\:-mt-0{
    margin-top: -0px;
  }

  .\32xl\:h-16{
    height: 4rem;
  }

  .\32xl\:min-h-40{
    min-height: 10rem;
  }

  .\32xl\:w-16{
    width: 4rem;
  }

  .\32xl\:min-w-40{
    min-width: 10rem;
  }

  .\32xl\:-translate-x-60{
    --tw-translate-x: -15rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .\32xl\:grid-rows-\[110px\]{
    grid-template-rows: 110px;
  }

  .\32xl\:gap-4{
    gap: 1rem;
  }

  .\32xl\:gap-6{
    gap: 1.5rem;
  }

  .\32xl\:text-\[20px\]{
    font-size: 20px;
  }
}

@media (prefers-color-scheme: dark){
  @media (min-width: 1024px){
    .dark\:lg\:hover\:\[paint-order\:markers\]:hover{
      paint-order: markers;
    }
  }
}
